#cloud-config
coreos:
  etcd2:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=3
    # use the generated token value with the command "mvn generate-resources -Detcd.token=YOUR_VALUE ..."
    # to generate valid cloud config under target
    discovery: https://discovery.etcd.io/${etcd.token}
    # multi-region and multi-cloud deployments need to use $public_ipv4
    advertise-client-urls: http://$private_ipv4:2379,http://$private_ipv4:4001
    initial-advertise-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001
    # listen on both the old and the official ports. NOTE: Fleet fails to connect if 4001 is not listened!
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001
  fleet:
    metadata: role=node
  units:
    # Mount an external volume for Docker using the volume host specific id
    # Use: -Dstorage.id.prefix=".." -Dstorage.id.postfix=".." to create the correct id
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=Mount storage to /var/lib/docker
        Before=docker.service
        [Mount]
        What=/dev/disk/by-id/${storage.id.prefix}3${storage.id.postfix}
        Where=/var/lib/docker
        Type=ext4
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: flanneld.service
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "10.1.0.0/16", "Backend": {"Type": "${flannel.backend}"} }'
      command: start

write_files:
  - path: /etc/systemd/system/docker.service.d/increase-ulimit.conf
    owner: core:core
    permissions: 0644
    content: |
      [Service]
      LimitMEMLOCK=infinity
  - path: /etc/metadata
    permissions: 0644
    owner: core
    content: |
      HOST_ID=3
      BACKUP_BUCKET_PATH=${backup.bucket.path}
      FILES_BUCKET_PATH=${files.bucket.path}
      SLAVE_COUNT=2
  - path: /etc/profile.d/aliases.sh
    permissions: 0644
    owner: core
    content: |
      alias cleanreboot='docker rmi $(docker images --quiet --filter "dangling=true") ; sudo systemctl reboot'
